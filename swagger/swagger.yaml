openapi: 3.0.3
info:
  title: Swagger Petstore - OpenAPI 3.0
  description: |-
    This is a sample Pet Store Server based on the OpenAPI 3.0 specification.  You can find out more about
    Swagger at [https://swagger.io](https://swagger.io). In the third iteration of the pet store, we've switched to the design first approach!
    You can now help us improve the API whether it's by making changes to the definition itself or to the code.
    That way, with time, we can improve the API in general, and expose some of the new features in OAS3.

    _If you're looking for the Swagger 2.0/OAS 2.0 version of Petstore, then click [here](https://editor.swagger.io/?url=https://petstore.swagger.io/v2/swagger.yaml). Alternatively, you can load via the `Edit > Load Petstore OAS 2.0` menu option!_
    
    Some useful links:
    - [The Pet Store repository](https://github.com/swagger-api/swagger-petstore)
    - [The source API definition for the Pet Store](https://github.com/swagger-api/swagger-petstore/blob/master/src/main/resources/openapi.yaml)
  termsOfService: http://swagger.io/terms/
  contact:
    email: apiteam@swagger.io
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io
servers:
  - url: https://petstore3.swagger.io/api/v3
tags:
  - name: pet
    description: Everything about your Pets
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: store
    description: Access to Petstore orders
    externalDocs:
      description: Find out more about our store
      url: http://swagger.io
  - name: user
    description: Operations about user
paths:
  /user/signin:
    x- post:
      tags:
        - User
      summary: 회원가입
      parameters:
      - name: signIn
        in: query
        required: true
        schema:
          properties:
            email:
              type: string
              description: 유저 이메일
              example: swaggerTest@mail.com
            name:
              type: string
              description: 유저 이름
              example: swagger
            gender:
              type: string
              description: 유저 성별
              example: M
            birthYear:
              type: integer
              description: 생일 년도
              example: 2000
            birthMonth:
              type: integer
              description: 생일 월
              example: 1
            birthDay:
              type: integer
              description: 생일 일
              example: 31
            addr:
              type: string
              description: 주소
              example: swagger Test address
            specAddr:
              type: string
              description: 상세 주소
              example: swagger Test specAddr
            phone:
              type: string
              description: 전화 번호
              example: 010-0000-0000
            prefer:
              type: array
              description: 선호 카테고리 번호
              example: [1, 3, 5]
      x- responses:
        '200':
          description: 회원 가입 성공!
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 200
              isSuccess:
                type: boolean
                example: true
              code:
                type: integer
                example: 2000
              message:
                type: string
                example: "success!"
              data:
                type: object
                example: {
                  "email": "swaggerTest@mail.com",
                  "name": "swagger",
                  "preferCategory": [
                    "한식",
                    "일식"
                  ]
                }
                
        '400':
          description: 잘못된 요청
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 400
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: COMMON001
              message:
                type: string
                example: 잘못된 요청입니다

        '500':
          description: 서버 에러
          schema:
            type: object
            properties:
              status:
                type: integer
                example: 500
              isSuccess:
                type: boolean
                example: false
              code:
                type: integer
                example: COMMON000
              message:
                type: string
                example: 서버 에러, 관리자에게 문의 바랍니다.